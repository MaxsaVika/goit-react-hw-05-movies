{"version":3,"file":"static/js/54.d7252392.chunk.js","mappings":"6SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,mCAAsCD,IAD5B,cAC3BG,EAD2B,gBAEpBA,EAASC,KAFW,mFAAH,qDAKnBC,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,gBACZK,EADY,oBACEN,EADF,oBADM,cACvBG,EADuB,gBAIhBA,EAASC,KAJO,mFAAH,sDAOfG,EAAe,mCAAG,WAAMD,GAAN,uFACNL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACUN,EADV,oBADM,cACvBG,EADuB,gBAIhBA,EAASC,KAJO,mFAAH,sDAOfI,EAAkB,mCAAG,WAAMF,GAAN,uFACTL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACUN,EADV,2BADS,cAC1BG,EAD0B,gBAInBA,EAASC,KAJU,mFAAH,sDAOlBK,EAAY,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBU,EADpB,+CADG,cACpBP,EADoB,gBAIbA,EAASC,KAJI,mFAAH,qD,gEC9BzB,EAAyB,uB,SCElB,SAASO,IACZ,OACI,gBAAKC,UAAWC,GAEvB,C,6ICND,EAA2B,2BAA3B,EAAgE,0BAAhE,EAAqG,2BAArG,EAA6I,6B,SCK9H,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAyBJ,EAAAA,EAAAA,UAAS,MAAlC,eAAMK,EAAN,KAAaC,EAAb,KAEOf,GAAMgB,EAAAA,EAAAA,MAANhB,GAoBP,OAlBAiB,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,oGAEVL,GAAW,GAFD,UAGSZ,EAAAA,EAAAA,IAAgBD,GAHzB,OAGJF,EAHI,OAIVa,EAAQb,EAAKY,MAJH,gDAOVK,EAAS,EAAD,IAPE,yBASVF,GAAW,GATD,4EAAH,qDAafK,GAEH,GAAC,CAAClB,KAGD,2BACGY,IAAW,SAACP,EAAA,EAAD,IACXS,IAAS,2CACO,IAAhBJ,EAAKS,QACJ,0BACE,eAAIb,UAAWC,EAAf,SACGG,EAAKU,KAAI,YAAyC,IAAvCC,EAAsC,EAAtCA,KAAMrB,EAAgC,EAAhCA,GAAIsB,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,UAClC,OACE,gBAAejB,UAAWC,EAA1B,WACE,gBAAKD,UAAWC,EAAaiB,IAAKF,EAAY,yCAAqCA,GAAiB,2DAA4DG,IAAI,MACpK,4BACE,wBAAKJ,KACL,gCAAQE,EAAR,YAJOvB,EAQd,SAEK,cAAGM,UAAWC,EAAd,qEAIjB,C","sources":["components/Api-service/Api.js","webpack://react-homework-template/./src/components/shared/Loader/Loader.module.scss?2197","components/shared/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MovieInfoPage/CastPage/CastList.module.scss?1bc7","pages/MovieInfoPage/CastPage/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5b00cd10e05c354cfbdbc23aa24fc7b8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const searchTrendDayMovie = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return await response.data;\n};\n\nexport const searchMovieById = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const searchMovieCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const searchMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return await response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return await response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__hDDB3\",\"rotation\":\"Loader_rotation__5p-vK\"};","import React from \"react\";\nimport css from './Loader.module.scss'\n\nexport function Loader () {\n    return (\n        <div className={css.loader}></div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"CastList_castList__nfYUq\",\"castImg\":\"CastList_castImg__a3uA+\",\"castItem\":\"CastList_castItem__TCobw\",\"noCastInfo\":\"CastList_noCastInfo__uXfOw\"};","import { searchMovieCast } from \"components/Api-service/Api\"\nimport { Loader } from \"components/shared/Loader/Loader\"\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport css from './CastList.module.scss'\n\nexport default function CastPage() {\n  const [cast, setCast] = useState([])\n  const [loading, setLoading] = useState(false)\n  const[error, setError] = useState(null)\n\n  const {id} = useParams()\n\n  useEffect(() => {\n      const fetchCast = async ()=> {          \n          try{\n              setLoading(true)\n              const data = await searchMovieCast(id);\n              setCast(data.cast)\n\n          } catch (error) {\n              setError(error)\n          } finally {\n              setLoading(false)\n          }         \n      }\n\n      fetchCast()\n\n  },[id])\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && <p>Movie load fail</p>}\n      {cast.length !== 0 ? (\n        <div>\n          <ul className={css.castList}>\n            {cast.map(({name, id, profile_path, character })=>{\n              return (\n                <li key = {id} className={css.castItem}>\n                  <img className={css.castImg} src={profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}` : 'https://www.freeiconspng.com/uploads/no-image-icon-4.png'} alt=\"\"/>\n                  <div>\n                    <h4>{name}</h4>\n                    <span>\"{character}\"</span>\n                  </div>                 \n                </li>\n              )\n            })}\n          </ul>\n        </div>) : <p className={css.noCastInfo}>There is no information about the cast of this movie.</p>\n    }\n    </div>\n  )\n}\n"],"names":["API_KEY","axios","searchTrendDayMovie","response","data","searchMovieById","id","searchMovieCast","searchMovieReviews","searchMovies","query","Loader","className","css","CastPage","useState","cast","setCast","loading","setLoading","error","setError","useParams","useEffect","fetchCast","length","map","name","profile_path","character","src","alt"],"sourceRoot":""}