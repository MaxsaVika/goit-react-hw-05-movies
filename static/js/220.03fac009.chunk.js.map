{"version":3,"file":"static/js/220.03fac009.chunk.js","mappings":"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","sources":["components/Api-service/Api.js","webpack://react-homework-template/./src/components/shared/Loader/Loader.module.scss?2197","components/shared/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MovieInfoPage/MovieInfoPage.module.scss?2efa","pages/MovieInfoPage/MovieInfoPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5b00cd10e05c354cfbdbc23aa24fc7b8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const searchTrendDayMovie = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return await response.data;\n};\n\nexport const searchMovieById = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const searchMovieCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const searchMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return await response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return await response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__hDDB3\",\"rotation\":\"Loader_rotation__5p-vK\"};","import React from \"react\";\nimport css from './Loader.module.scss'\n\nexport function Loader () {\n    return (\n        <div className={css.loader}></div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"movieSection\":\"MovieInfoPage_movieSection__3kwT-\",\"goBackBtn\":\"MovieInfoPage_goBackBtn__0zWz6\",\"movieWrapper\":\"MovieInfoPage_movieWrapper__WivU4\",\"movieAdditionalWrapper\":\"MovieInfoPage_movieAdditionalWrapper__qFJHT\",\"movieImgThumb\":\"MovieInfoPage_movieImgThumb__kWaUY\",\"movieImg\":\"MovieInfoPage_movieImg__OtSff\",\"movieInfo\":\"MovieInfoPage_movieInfo__YgHgp\",\"movieTitle\":\"MovieInfoPage_movieTitle__zqYzr\",\"movieInfoList\":\"MovieInfoPage_movieInfoList__i1rYT\",\"movieAdditionalInfoList\":\"MovieInfoPage_movieAdditionalInfoList__IHcF-\",\"movieInfoItem\":\"MovieInfoPage_movieInfoItem__goQIA\",\"movieInfoDetail\":\"MovieInfoPage_movieInfoDetail__frQyv\",\"movieInfoWrapper\":\"MovieInfoPage_movieInfoWrapper__dXriN\",\"movieGenre\":\"MovieInfoPage_movieGenre__LTvIm\",\"movieInfoAbout\":\"MovieInfoPage_movieInfoAbout__5N3Pd\",\"link\":\"MovieInfoPage_link__mRGQ4\",\"active\":\"MovieInfoPage_active__jSh7e\"};","import { searchMovieById } from \"components/Api-service/Api\"\nimport { Loader } from \"components/shared/Loader/Loader\"\nimport { useEffect, useState } from \"react\"\nimport { useParams, useNavigate, Outlet, NavLink, useLocation } from \"react-router-dom\"\nimport css from './MovieInfoPage.module.scss'\n\nexport default function MovieInfoPage() {\n    const [movie, setMovie] = useState('')\n    const [loading, setLoading] = useState(false)\n    const[error, setError] = useState(null)\n\n    const {id} = useParams()\n    const navigate = useNavigate()\n\n    const getClassName = ({ isActive }) => {\n        return isActive ? `${css.link} ${css.active}` : `${css.link}`;\n      };\n\n    const location = useLocation()\n    const from = location.state?.from || \"/\"\n    const goBack = () => navigate(from)\n\n\n    const castLink = location.pathname.includes(\"cast\") ? `/movies/${id}` : `/movies/${id}/cast`\n    const reviewsLink = location.pathname.includes(\"reviews\") ? `/movies/${id}` : `/movies/${id}/reviews`\n\n    const imagePath = movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : 'https://w7.pngwing.com/pngs/772/172/png-transparent-film-cinema-television-android.png';\n    const releaseDate = movie.release_date ? movie.release_date?.split('-')[0] : 'No data';\n\n    useEffect(() => {\n        const fetchMovie = async ()=> {          \n            try{\n                setLoading(true)\n                const data = await searchMovieById(id);\n                setMovie(data)\n\n            } catch (error) {\n                setError(error)\n            } finally {\n                setLoading(false)\n            }         \n        }\n\n        fetchMovie()\n\n    },[id])\n\n\n  return (\n    <section className={css.movieSection}>\n        <button type=\"button\" onClick={goBack} className={css.goBackBtn}>Go back</button>\n      {loading && <Loader />}\n      {error && (\n                <div className={css.movieImgThumb}>\n                    <h4>The resource you requested could not be found.</h4>\n                    <img src={'https://w7.pngwing.com/pngs/772/172/png-transparent-film-cinema-television-android.png'} alt='' className={css.movieImg}/>\n                </div>\n                )}\n\n      {movie && (\n        <>\n            <div className={css.movieWrapper}>\n                <div className={css.movieImgThumb}>\n                    <img src={imagePath} alt={movie.title || movie.name} className={css.movieImg}/>\n                </div>\n\n                <div className={css.movieInfo}>\n                    <h2 className={css.movieTitle}>{movie.title || movie.name} ({releaseDate})</h2>\n                    <ul className={css.movieInfoList}>\n                        <li className={css.movieInfoItem}>User score: <span className={css.movieInfoDetail}>{Math.round(movie.vote_average * 10)}%</span></li>\n                        <li className={css.movieInfoItem}>Popularity: <span className={css.movieInfoDetail}>{movie.popularity}</span></li>\n                        <li className={css.movieInfoItem}>Duration: <span className={css.movieInfoDetail}>{movie.runtime} min</span></li>\n                    </ul>  \n                    <div className={css.movieInfoWrapper}>\n                        <h4>About</h4>\n                        <p className={css.movieInfoAbout}>{movie.overview}</p>\n                    </div>   \n                    \n                    \n                    <div className={css.movieInfoWrapper}>\n                        <h4>Genres</h4>\n                        <p className={css.movieInfoAbout}>\n                            {movie.genres.map(genre => \n                                (<span  className={css.movieGenre} key = {genre.id}>{genre.name}</span>))}\n                        </p>\n                    </div>\n                \n                </div>\n            </div>\n\n            <div className={css.movieAdditionalWrapper}>\n                <h4>Additional information</h4>\n                <ul className={css.movieAdditionalInfoList}>\n                    <li><NavLink state = {{from}} to={castLink} className={getClassName} end>Cast</NavLink></li> \n                    <li><NavLink state = {{from}} to={reviewsLink} className={getClassName} end>Reviews</NavLink></li> \n                </ul>\n                <Outlet/>\n            </div>\n        </>)}\n    </section>\n  )\n}\n"],"names":["API_KEY","axios","searchTrendDayMovie","response","data","searchMovieById","id","searchMovieCast","searchMovieReviews","searchMovies","query","Loader","className","css","MovieInfoPage","useState","movie","setMovie","loading","setLoading","error","setError","useParams","navigate","useNavigate","getClassName","isActive","location","useLocation","from","state","castLink","pathname","includes","reviewsLink","imagePath","poster_path","releaseDate","release_date","split","useEffect","fetchMovie","type","onClick","src","alt","title","name","Math","round","vote_average","popularity","runtime","overview","genres","map","genre","to","end"],"sourceRoot":""}